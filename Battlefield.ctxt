#BlueJ class context
comment0.params=
comment0.target=Battlefield()
comment1.params=
comment1.target=void\ playGame()
comment10.params=num\ x\ y
comment10.target=char\ getElementAt(int,\ int,\ int)
comment11.params=
comment11.target=void\ printGrid()
comment12.params=
comment12.target=void\ displayShips()
comment2.params=
comment2.target=char[][]\ createGrid()
comment3.params=
comment3.target=void\ attack()
comment4.params=x\ y
comment4.target=void\ checkLocation(int,\ int)
comment5.params=
comment5.target=void\ checkVictory()
comment5.text=\n//returns\ true\ if\ the\ ship\ will\ run\ off\ the\ edge\ of\ the\ grid\n//called\ on\ in\ placement()\ in\ ship\ class\npublic\ boolean\ checkBoundaries(int\ direction,\ int\ x,\ int\ y,\ int\ length)\n{\n\ \ \ \ switch\ (direction){\n\ \ \ \ \ \ \ \ case\ 0\:\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (y\ +\ length\ >\ 10)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ case\ 1\:\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (x\ +\ length\ >\ 10)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ else\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ case\ 2\:\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (y\ -\ length\ <\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ else\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ case\ 3\:\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (x\ -\ length\ <\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\ \ \ \ \ \ \ \ \ \ \ \ else\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ default\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \n\ \ \ \ }\n}\n\n//checks\ grid\ array\ where\ ship\ will\ be\ placed\ to\ check\ for\ existing\ ships\n//returns\ true\ if\ overlap\ exists\npublic\ boolean\ checkOverlap(int\ direction,\ int\ x,\ int\ y,\ int\ length)\n{\n\ \ \ \ switch\ (direction){\n\ \ \ \ \ \ \ \ case\ 0\:\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ case\ 1\:\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ case\ 2\:\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ case\ 3\:\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ default\:\n\ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \n\ \ \ \ }\n}\n
comment6.params=input
comment6.target=int\ charToInt(java.lang.String)
comment7.params=playerNum
comment7.target=void\ incrementScore(int)
comment8.params=
comment8.target=void\ incrementScore()
comment9.params=gridNum\ x\ y\ fill
comment9.target=void\ setGrid(int,\ int,\ int,\ char)
numComments=13
